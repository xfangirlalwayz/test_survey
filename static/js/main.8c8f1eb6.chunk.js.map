{"version":3,"sources":["firebase.js","config.js","Resume.js","LandingPage.jsx","Admin.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Resume","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","positionList","recordActivity","db","firestore","collapsibleOpened","collapsibleToggled","bind","_assertThisInitialized","_createClass","key","value","_this2","this","setState","applicantNumber","tierNumber","parseCandidateData","getResumeValues","collection","doc","qualtricsUserId","set","appStartTime","moment","tz","window","addEventListener","event","preventDefault","console","log","currTime","activeSection","diff","activeStartTime","commaSeparatedString","applicant","applicants","tiers","personal_address","a_personal_address","name","a_personal_legal_name","citizenship","b_demographics_citizenship","gender","b_demographics_gender","hispanic","b_demographics_hispanic","racial","b_demographics_racial","fedu","c_family_fedu","medu","c_family_medu","gpa","d_gpa","courses_taken","d_courses_taken","split","sat_rw","e_sat_rw","sat_math","e_sat_math","ap_subject1","e_ap_subject1","ap_subject2","e_ap_subject2","prevProps","prevState","eventKey","undefined","callbackFunc","_this3","applicantData","tierData","get","then","querySnapshot","forEach","push","data","catch","error","newPosition","concat","_toConsumableArray","e","_this4","hsprofile_url","getApplicationComponentUrl","transcript_url","activities_url","essay_url","_jsx","className","children","onMouseMove","_onMouseMove","_jsxs","style","fontWeight","marginTop","marginBottom","map","course","Accordion","Card","Header","background","paddingLeft","paddingRight","Toggle","as","Button","color","width","display","flexDirection","justifyContent","fontSize","alignItems","variant","onClick","hsprofileSectionOpened","transcriptSectionOpened","activitiesSectionOpened","essaySectionOpened","id","src","imageToURL","alt","Collapse","Body","borderTop","React","Component","imageName","process","dir","LandingPage","_useState","useState","_useState2","_slicedToArray","iframes","setIframes","renderEmbeddedResume","iframeSrc","iframeTitle","newIframe","height","title","length","href","Admin","showPasswordErrorMessage","isAuthenticated","typedText","userIDs","resumeCSVurl","activitiesCSVurl","DATABASE","resumeContent","activityContent","rootElement","document","getElementById","ModalReact","setAppElement","target","fetchData","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tmp","wrap","_context","prev","next","sent","docs","resumePromises","user","Promise","all","getResumeContent","createCSV","activityPromises","Array","keys","x","appNum","getActivityContent","stop","apply","arguments","responseID","resumeNum","exists","_objectSpread","tierNum","activityID","csv","Papa","unparse","blob","Blob","type","URL","createObjectURL","_this5","download","isOpen","onSubmit","submitPassword","htmlFor","onChange","handleChange","autoFocus","require","App","activityCounter","loc","location","hash","parseInt","_recordActivity","category","description","now","abrupt","toString","padStart","timestamp","Date","timeEpoch","Number","format","timeReadable","_x","_x2","_x3","size","HashRouter","Route","path","render","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8c8f1eb6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n// Contains sensitive information, so you have to create this file yourself\nimport { firebaseConfig } from \"./config.js\";\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","// The demo version doesn't log to Firebase, and speeds up the Admin page by only downloading a small amount of sample data\nexport const IS_DEMO_VERSION = false;\n\n// This is the password to log into the admin page and download the data\nexport const adminPassword = \"letmein\";\n\n// This is the Firebase configuration, which you can get from the Firebase console\n// (Order doesn't matter)\nexport const firebaseConfig = {\n\tapiKey: \"AIzaSyD7yAsyCWr27YwB_wNYKAEWiBSM4VRtBU0\",\n\tauthDomain: \"survey-digital-trace-project.firebaseapp.com\",\n\tprojectId: \"survey-digital-trace-project\",\n\tstorageBucket: \"survey-digital-trace-project.appspot.com\",\n\tmessagingSenderId: \"1085800929605\",\n\tappId: \"1:1085800929605:web:31566d2b20bf0be331c62c\",\n\t// Optional\n\tmeasurementId: \"G-9LLMERWK25\",\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport Divider from \"@material-ui/core/Divider\";\nimport firebase from \"./firebase\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport moment from \"moment-timezone\";\n\n/*\n  This is the main component for the resume page. It displays a resume with various sections that can be toggled open and closed.\n  All of the randomization and pre-processing of the Firebase values is done here.\n*/\n\nexport default class Resume extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpositionList: [],\n\t\t};\n\n\t\t// Add props to \"this\"\n\t\tthis.recordActivity = this.props.recordActivity;\n\n\t\tconst db = firebase.firestore();\n\t\tthis.db = db; /*connects to firestore db, saves connection to this.db*/\n\n\t\tthis.collapsibleOpened = this.collapsibleToggled.bind(this);\n\t}\n\n\n\tcomponentDidMount() {\n\t\t// applicantNumber used to be called studyVersion\n\t\t// tierNumber used to be called resumeVersion\n\t\tthis.setState({\n\t\t\tapplicantNumber: this.props.applicantNumber,\n\t\t\ttierNumber: this.props.tierNumber,\n\t\t\t// courses: [\n\t\t\t// \t{ name: \"Statistics\", firstSemester: \"Full year / first semester\", secondSemester: \"n/a\", thirdTrimester: \"n/a\" },\n\t\t\t// \t{ name: \"AP English Literature\", firstSemester: \"Full year / first semester\", secondSemester: \"n/a\", thirdTrimester: \"n/a\" },\n\t\t\t// \t{ name: \"AP Chemistry\", firstSemester: \"Full year / first semester\", secondSemester: \"n/a\", thirdTrimester: \"n/a\" },\n\t\t\t// \t{ name: \"AP US History\", firstSemester: \"Full year / first semester\", secondSemester: \"n/a\", thirdTrimester: \"n/a\" },\n\t\t\t// \t{ name: \"Spanish 6\", firstSemester: \"Full year / first semester\", secondSemester: \"n/a\", thirdTrimester: \"n/a\" }\n\t\t\t//   ],\n\t\t}, () => {\n\t\t\tthis.parseCandidateData(() => {\n\t\t\t\tthis.getResumeValues();\n\t\t\t});\n\t\t});\n\n\t\t// Make sure document exists\n\t\tthis.db.collection('responseIDs').doc(this.props.qualtricsUserId + '_tier' + this.props.tierNumber).set({});\n\n\t\t// Track app start time\n\t\tthis.setState({\n\t\t\tappStartTime: moment().tz(\"America/New_York\")\n\t\t});\n\n\t\t// Try tracking when page is refreshed or navigated away\n\t\twindow.addEventListener('pagehide', (event) => {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('pagehide...');\n\t\t\tconst currTime = moment().tz(\"America/New_York\")\n\n\t\t\t// If a section is still opened, record its active time\n\t\t\tif (this.state.activeSection) {\n\t\t\t\tthis.recordActivity(\n\t\t\t\t\t\"collapsibleTime\",\n\t\t\t\t\tthis.state.activeSection,\n\t\t\t\t\tcurrTime.diff(this.state.activeStartTime, 'milliseconds') + \" msec spent on \" + this.state.activeSection + \" section\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Record total time spent on app\n\t\t\tthis.recordActivity(\n\t\t\t\t\"appTime\",\n\t\t\t\t\"accessed\",\n\t\t\t\tcurrTime.diff(this.state.appStartTime, 'milliseconds') + \" msec spent on app\"\n\t\t\t);\n\n\t\t\t// Record click activity\n\t\t\tthis.recordActivity(\"unloading\", \"accessed\", \"App unmounted\");\n\t\t}, true);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconsole.log('componentWillUnmount from Resume.js');\n\t}\n\n\t/** The first resume has randomly-decided values. Decide them and put into state. */\n\tgetResumeValues() {\n\t\tlet applicant = this.state.applicants[this.state.applicantNumber - 1];\n\t\tlet tiers = this.state.tiers[convertToFirebaseNumber(this.state.tierNumber, this.state.applicantNumber)];\n\t\t/*BK: INSERT FIREBASE DATA HERE. PART1*/\n\t\t/* values on the right are being held in key on the left  */\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tpersonal_address: applicant.a_personal_address, \n\t\t\t\tname: applicant.a_personal_legal_name,\n\t\t\t\tcitizenship: applicant.b_demographics_citizenship,\n\t\t\t\tgender: applicant.b_demographics_gender,\n\t\t\t\thispanic: applicant.b_demographics_hispanic,\n\t\t\t\tracial: applicant.b_demographics_racial,\n\t\t\t\tfedu: applicant.c_family_fedu,\n\t\t\t\tmedu: applicant.c_family_medu,\n\t\t\t\tgpa: tiers.d_gpa, \n\t\t\t\tcourses_taken: parseList(tiers.d_courses_taken),\n\t\t\t\tsat_rw: tiers.e_sat_rw,\n\t\t\t\tsat_math: tiers.e_sat_math,\n\t\t\t\tap_subject1: tiers.e_ap_subject1,\n\t\t\t\tap_subject2: tiers.e_ap_subject2,\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t// Record amount of time spent on active section\n\t\tif (prevState.activeSection && prevState.activeSection !== this.state.activeSection) {\n\t\t\tconst currTime = moment().tz(\"America/New_York\")\n\n\t\t\tthis.recordActivity(\n\t\t\t\t\"collapsibleTime\",\n\t\t\t\tprevState.activeSection,\n\t\t\t\tcurrTime.diff(prevState.activeStartTime, 'milliseconds') + \" msec spent on \" + prevState.activeSection + \" section\"\n\t\t\t);\n\t\t}\n\t}\n\n\t/** Called when a section is toggled open/closed */\n\t// TODO(bkbyun): Change these values.\n\tcollapsibleToggled(eventKey) {\n\t\tif (this.state[eventKey + \"SectionOpened\"]) {  // if clicked on the section to open, start tracking time spent\n\t\t\tthis.setState({\n\t\t\t\tactiveSection: eventKey,\n\t\t\t\tactiveStartTime: moment().tz(\"America/New_York\")\n\t\t\t});\n\t\t} else {  // if clicked on the section to close, clear active section\n\t\t\tthis.setState({\n\t\t\t\tactiveSection: undefined,\n\t\t\t\tactiveStartTime: undefined\n\t\t\t})\n\t\t}\n\n\t\tthis.recordActivity(\n\t\t\t\"collapsibleToggled\",\n\t\t\teventKey,\n\t\t\t(this.state[eventKey + \"SectionOpened\"] ? \"opened\" : \"closed\") + \" \" + eventKey + \" section\"\n\t\t);\n\t}\n\n\t/** Fetches the candidate data from the database and stores it in state */\n\tparseCandidateData(callbackFunc) {\n\t\tconst applicantData = this.db.collection(\"Applicants\");\n\t\tconst tierData = this.db.collection(\"Tiers\");\n\t\tconst applicants = [];\n\t\tconst tiers = [];\n\n\t\ttierData\n\t\t\t.get()\n\t\t\t.then((querySnapshot) => {\n\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\ttiers.push(doc.data());\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\ttiers: tiers,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"Error getting tiers: \", error);\n\t\t\t})\n\t\tapplicantData\n\t\t\t.get()\n\t\t\t.then((querySnapshot) => {\n\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\tapplicants.push(doc.data());\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Set to state and call callback\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tapplicants: applicants,\n\t\t\t\t\t},\n\t\t\t\t\tcallbackFunc\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"Error getting applicants:\", error);\n\t\t\t});\n\t}\n\n\t/** Helper function: append a new position to the positionList */\n\taddPositionToList(newPosition) {\n\t\tthis.setState((prevState) => ({\n\t\t\tpositionList: [...prevState.positionList, newPosition],\n\t\t}));\n\t}\n\n\t/** Runs when the user moves the mouse */\n\t_onMouseMove(e) {\n\t\t// this.recordActivity(\"mouse\", `(${e.clientX},${e.clientY})`, \"moved mouse\");\n\t}\n\n\t/** https://pdf2png.com/ */\n\trender() {\n\t\tlet hsprofile_url = getApplicationComponentUrl(\"1_hsprofile\", \"profile_app\" + this.state.applicantNumber);\n\t\tlet transcript_url = getApplicationComponentUrl(\"2_transcripts\", \"transcript_t\" + this.state.tierNumber + \"_app\" + this.state.applicantNumber);\n\t\tlet activities_url = getApplicationComponentUrl(\"3_activities\", \"activities_t\" + this.state.tierNumber + \"_app\" + this.state.applicantNumber);\n\t\tlet essay_url = getApplicationComponentUrl(\"4_essay\", \"essay_app\" + this.state.applicantNumber);\n\n\t\t// If our data hasn't loaded yet, show a loading screen\n\t\tif (\n\t\t\t!(\n\t\t\t\tthis.state.name\n\t\t\t)\n\t\t) {\n\t\t\treturn <h1>Loading...</h1>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"overall\">\n\t\t\t\t<div className=\"App\" onMouseMove={this._onMouseMove.bind(this)}>\n\t\t\t\t\t<div className=\"resume\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>Applicant #{this.state.applicantNumber}</span>: <span>Engineering Undeclared</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"header\" style={{ marginTop: '20px' }}>Student Information</div>\n\t\t\t\t\t\t\t<p className=\"content\" style={{ fontWeight: \"bold\" }}>Personal Information</p>\n\t\t\t\t\t\t\t<p className=\"content\">\n\t\t\t\t\t\t\t\tLegal name: {this.state.name}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className=\"content\">Permanent home address: {this.state.personal_address}</p>\n\t\t\t\t\t\t\t<p className=\"content\" style={{ marginTop: '12px', marginBottom: '12px' }}></p> {/*to insert slight line*/}\n\t\t\t\t\t\t\t<p className=\"content\" style={{ fontWeight: \"bold\" }}>Demographics</p>\n\t\t\t\t\t\t\t<p className=\"content\">Gender: {this.state.gender}</p>\n\t\t\t\t\t\t\t<p className=\"content\">Citizenship status: {this.state.citizenship}</p>\n\t\t\t\t\t\t\t<p className=\"content\">Hispanic/Latino/a/x: {this.state.hispanic}</p>\n\t\t\t\t\t\t\t<p className=\"content\">Racial identity: {this.state.racial}</p>\n\t\t\t\t\t\t\t<p className=\"content\" style={{ marginTop: '12px', marginBottom: '12px' }}></p>\n\t\t\t\t\t\t\t<p className=\"content\" style={{ fontWeight: \"bold\" }}>Family</p>\n\t\t\t\t\t\t\t<p className=\"content\">Father’s education: {this.state.fedu}</p>\n\t\t\t\t\t\t\t<p className=\"content\">Mother’s education: {this.state.medu}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<div className=\"header\" style={{ marginTop: '20px' }}>Education</div>\n\t\t\t\t\t\t{/* confirm with Mike} <p className=\"content\">Secondary/high school: {this.state.secondarySchool}</p> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t{/* confirm with Mike} <div className=\"content\" style={{ marginTop: '12px', fontWeight: \"bold\" }}>Grades</div> */}\n\t\t\t\t\t\t\t<div className=\"content\" style={{ fontWeight: \"bold\" }}>Grades</div> \n\t\t\t\t\t\t\t<p className=\"content\">Cumulative GPA: {this.state.gpa}</p>\n\t\t\t\t\t\t\t{/* confirm with Mike}\n\t\t\t\t\t\t\t<p className=\"content\">Unweighted GPA: {this.state.unweightedGPA}</p>\n\t\t\t\t\t\t\t<p className=\"content\">Weighted GPA: {this.state.weightedGPA} (*calculated by adding .5 points for honors classes and 1 point for AP classes)</p>\n\t\t\t\t\t\t\t<p className=\"content\">Honors/AP classes: {this.state.honorsAPClasses}</p> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t<div className=\"content\" style={{ marginTop: '12px', fontWeight: \"bold\" }}>Courses taken in current or most recent year</div>\n\t\t\t\t\t\t\t<table className=\"course-table\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{this.state.courses_taken.map((course) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={course}>\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"courses_taken_style underline\">{course}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t<div className=\"header\" style={{ marginTop: '20px' }}>Testing</div>\n\t\t\t\t\t\t\t<p className=\"content\" style={{ fontWeight: \"bold\" }}>SAT</p>\n\t\t\t\t\t\t\t{(this.state.sat_rw || this.state.sat_math) ?\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p className=\"content\">Evidence-Based Reading and Writing: {this.state.sat_rw}</p>\n\t\t\t\t\t\t\t\t<p className=\"content\">Mathematics: {this.state.sat_math}</p>\n\t\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t\t<p className=\"content\">Not Submitted</p>}\n\t\t\t\t\t\t\t<p className=\"content\" style={{ fontWeight: \"bold\" }}>AP</p>\n\t\t\t\t\t\t\t<p className=\"content\"> {this.state.ap_subject1}</p>\n\t\t\t\t\t\t\t<p className=\"content\"> {this.state.ap_subject2}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t\t{/* High School Profile Section */}\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\thsprofileSectionOpened:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.state.hsprofileSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(\"hsprofile\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.hsprofileSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Mark the other sections as closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranscriptSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactivitiesSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tessaySectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tHigh School Profile{\" \"}\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.hsprofileSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Card.Header>\n\n    \t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\" style={{ marginTop: 0 }}>\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t{/* <img src={hsprofile_url} className=\"image_togglefit\" alt=\"High School Profile\"></img> */}\n\t\t\t\t\t\t\t\t\t\t<img src={hsprofile_url} className=\"hsprofile-picture\" alt=\"High School Profile\"></img>\n\t\t\t\t\t\t\t\t\t</Card.Body> \n\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t{/* Transcript Section */}\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\tborderTop: \"1px solid black\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\teventKey=\"1\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranscriptSectionOpened: !this.state.transcriptSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(\"transcript\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.transcriptSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Mark the other sections as closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thsprofileSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactivitiesSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tessaySectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tTranscript{\" \"}\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.transcriptSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t{/* Position List */}\n\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<img src={transcript_url} className=\"image_togglefit\" alt=\"Transcript\"></img>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t{/* Activities Section */}\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\tborderTop: \"1px solid black\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\teventKey=\"2\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tactivitiesSectionOpened: !this.state.activitiesSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(\"activities\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.activitiesSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Mark the other sections as closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thsprofileSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranscriptSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tessaySectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tActivities {\" \"}\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.activitiesSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"2\">\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<img src={activities_url} className=\"image_togglefit\" alt=\"Transcript\"></img>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t</Card> \n\n\t\t\t\t\t\t\t{/* Personal Essay Section */}\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\tborderTop: \"1px solid black\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\teventKey=\"3\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tessaySectionOpened: !this.state.essaySectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(\"essay\"); /*bkcheck*/\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.essaySectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Mark the other sections as closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thsprofileSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranscriptSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactivitiesSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPersonal Essay{\" \"}\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.essaySectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t{/* Position List */}\n\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"3\">\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<img src={essay_url} className=\"image_togglefit\" alt=\"Transcript\"></img>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/**\n * Turns an image name into the src, relative to /public/images. Image should be a png.\n */\nexport function imageToURL(imageName) {\n\treturn `${process.env.PUBLIC_URL}/images/${imageName}.png`;\n}\n\nexport function getApplicationComponentUrl(dir, imageName) {\n\treturn `${process.env.PUBLIC_URL}/application_components/${dir}/${imageName}.png`;\n}\n\nexport function convertToFirebaseNumber(tierNumber, applicantNumber) {\n\treturn (tierNumber - 1) * 4 + (applicantNumber - 1); \n}\n\nexport function parseList(commaSeparatedString) {\n\treturn commaSeparatedString.split(\", \");\n}\n","import React, { useState } from \"react\";\n\n/*\n  This is the landing page for the demo. \n  It's a simple page that explains the study and shows you what the website looks like when embedded into a Qualtrics survey.\n*/\n\nexport default function LandingPage() {\n\tconst [iframes, setIframes] = useState([]);\n\n\tconst renderEmbeddedResume = (applicantNumber, tierNumber) => {\n\t\tconst iframeSrc = `/test_survey/#/${applicantNumber}/${tierNumber}/0sampleResponseIDstudy${applicantNumber}`;\n\t\tconst iframeTitle = `${applicantNumber}${tierNumber}`;\n\n\t\tconst newIframe = (\n\t\t\t<iframe\n\t\t\t\tkey={iframeTitle}\n\t\t\t\theight=\"630px\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\tsrc={iframeSrc}\n\t\t\t\ttitle={iframeTitle}\n\t\t\t></iframe>\n\t\t);\n\t\tsetIframes([...iframes, newIframe]);\n\t};\n\n\treturn (\n\t\t<div className=\"LandingPage container\">\n\t\t\t<h1>Pretend this is the Qualtrics Survey</h1>\n\n\t\t\t<h2>You'll have some questions</h2>\n\t\t\t<p>And information and such</p>\n\n\t\t\t<p>And then you can embed the Digital Trace Data page.</p>\n\n\t\t\t<p>\n\t\t\t\tBy default, we are manipulating candidate gender and parenthood status.\n\t\t\t</p>\n\n\t\t\t<p>There are two resumes. Here's Candidate 1.</p>\n\n\t\t\t<h3>First Resume</h3>\n\n\t\t\t<button onClick={() => renderEmbeddedResume(1, 1)}>\n\t\t\t\tGenerate Candidate 1 resume\n\t\t\t</button>\n\t\t\t{iframes.length >= 1 && iframes[0]}\n\n\t\t\t<h3>Second Resume</h3>\n\n\t\t\t<p>And now Candidate 2.</p>\n\n\t\t\t<button onClick={() => renderEmbeddedResume(1, 2)}>\n\t\t\t\tGenerate Candidate 2 resume\n\t\t\t</button>\n\t\t\t{iframes.length >= 2 && iframes[1]}\n\n\t\t\t<h2>Downloading the Data</h2>\n\t\t\t<p>\n\t\t\t\tOnce you've run your study, you can download the data in CSV format at{\" \"}\n\t\t\t\t<a href=\"#/admin\">/admin</a>. In this demo, you can download the data no\n\t\t\t\tmatter what password you put in.\n\t\t\t</p>\n\n\t\t\t<a href=\"https://www.google.com/\">/admin</a>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport firebase from \"./firebase\";\nimport Papa from \"papaparse\";\nimport ModalReact from \"react-modal\";\nimport { IS_DEMO_VERSION, adminPassword } from \"./config\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Admin extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowPasswordErrorMessage: false,\n\t\t\tisAuthenticated: false,\n\t\t\ttypedText: \"\",\n\n\t\t\tuserIDs: [],\n\t\t\tresumeCSVurl: null,\n\t\t\tactivitiesCSVurl: null,\n\t\t};\n\n\t\tthis.DATABASE = firebase.firestore();\n\n\t\tthis.resumeContent = [];\n\t\tthis.activityContent = [];\n\n\t\t// Ensures screen readers don't see the content while the modal is open\n\t\tconst rootElement = document.getElementById(\"root\");\n\t\tModalReact.setAppElement(rootElement);\n\t}\n\n\t/** Handles typing in the password box */\n\thandleChange(event) {\n\t\tthis.setState({ showPasswordErrorMessage: false });\n\t\tthis.setState({ typedText: event.target.value });\n\t}\n\n\t/** When the submit button is clicked */\n\tsubmitPassword() {\n\t\tif (this.state.typedText === adminPassword || IS_DEMO_VERSION) {\n\t\t\tthis.setState({ isAuthenticated: true });\n\t\t\tthis.fetchData();\n\t\t} else {\n\t\t\tthis.setState({ showPasswordErrorMessage: true, isAuthenticated: false });\n\t\t}\n\t}\n\n\t/** Main function that kick-starts all the downloading */\n\tasync fetchData() {\n\t\tlet userIDs = null;\n\n\t\t// In the demo version, only use the sample response IDs\n\t\tif (IS_DEMO_VERSION) {\n\t\t\tuserIDs = [\"0sampleResponseIDstudy1\", \"0sampleResponseIDstudy2\"];\n\t\t} else {\n\t\t\tconst tmp = await this.DATABASE.collection(\"responseIDs\").get();\n\t\t\tuserIDs = tmp.docs.map((doc) => doc.id);\n\t\t}\n\n\t\tif (userIDs.length > 0) {\n\t\t\tthis.setState({ userIDs: userIDs }, () => {\n\t\t\t\t// Get resume content for each user\n\t\t\t\tconst resumePromises = userIDs.map((user) => {\n\t\t\t\t\treturn Promise.all([\n\t\t\t\t\t\tthis.getResumeContent(user, 1),\n\t\t\t\t\t\tthis.getResumeContent(user, 2),\n\t\t\t\t\t]);\n\t\t\t\t});\n\n\t\t\t\t// Wait for all promises to resolve\n\t\t\t\tPromise.all(resumePromises)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// Create a CSV from the resume content\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tresumeCSVurl: this.createCSV(this.resumeContent),\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error(\"Error fetching resumes:\", error);\n\t\t\t\t\t});\n\n\t\t\t\t// Get activity content for each user\n\t\t\t\tconst activityPromises = userIDs.map((user) => {\n\t\t\t\t\treturn Promise.all(\n\t\t\t\t\t\t[...Array(4).keys()].map(x => ++x).map((appNum) => {\n\t\t\t\t\t\t\treturn this.getActivityContent(user.split('_tier')[0], user.split('_tier')[1], appNum)\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t});\n\n\t\t\t\t// Wait for all promises to resolve\n\t\t\t\tPromise.all(activityPromises)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// Create a CSV from the activity content\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tactivitiesCSVurl: this.createCSV(this.activityContent),\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error(\"Error fetching activity:\", error);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/** Get the content of the resume a user saw */\n\tgetResumeContent(responseID, resumeNum) {\n\t\t// Get the reference to the resume\n\t\tconst resumeRef = this.DATABASE.collection(\"responseIDs\")\n\t\t\t.doc(responseID)\n\t\t\t.collection(\"values shown\")\n\t\t\t.doc(`resume ${resumeNum}`);\n\n\t\t// Get the content of the resume\n\t\treturn resumeRef\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tif (doc.exists) {\n\t\t\t\t\tthis.resumeContent.push({\n\t\t\t\t\t\tresponseID: responseID,\n\t\t\t\t\t\tresumeNum: resumeNum,\n\t\t\t\t\t\t...doc.data(),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"No such document!\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"Error getting document:\", error);\n\t\t\t});\n\t}\n\n\t/** Get the activity of a user on a specific resume */\n\tgetActivityContent(responseID, tierNum, appNum) {\n\t\t// Get the reference to the resume\n\t\tconst resumeRef = this.DATABASE.collection(\"responseIDs\")\n\t\t\t.doc(`${responseID}_tier${tierNum}`)\n\t\t\t.collection(`app${appNum}`);\n\n\t\t// Get the content of the resume\n\t\treturn resumeRef.get().then((querySnapshot) => {\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\tthis.activityContent.push({\n\t\t\t\t\tresponseID: responseID,\n\t\t\t\t\ttierNum: tierNum,\n\t\t\t\t\tappNum: appNum,\n\t\t\t\t\tactivityID: doc.id,\n\t\t\t\t\t...doc.data(),\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/** Create a CSV from an array of dictionaries */\n\tcreateCSV(data) {\n\t\t// Convert the array of dictionaries to CSV format\n\t\tconst csv = Papa.unparse(data);\n\n\t\t// Create a Blob containing the CSV data\n\t\tconst blob = new Blob([csv], { type: \"text/csv\" });\n\n\t\t// Create a download link\n\t\treturn URL.createObjectURL(blob);\n\t}\n\n\trender() {\n\t\t/* Login popup */\n\t\tif (!this.state.isAuthenticated) {\n\t\t\treturn (\n\t\t\t\t<ModalReact className=\"modal_dtp\" isOpen={!this.state.isAuthenticated}>\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tthis.submitPassword();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\">Enter Password:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\t\t\t\tvalue={this.state.typedText}\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.state.showPasswordErrorMessage && (\n\t\t\t\t\t\t\t<div id=\"red\">Invalid password. Please re-enter.</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</ModalReact>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"overall\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"title\">Download Data</div>\n\n\t\t\t\t\t{!this.state.activitiesCSVurl && !this.state.resumeCSVurl && (\n\t\t\t\t\t\t<p>Processing...</p>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{this.state.activitiesCSVurl && (\n\t\t\t\t\t\t<div className=\"horizontal\" id=\"big\">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={this.state.activitiesCSVurl}\n\t\t\t\t\t\t\t\tdownload={`activity_data.csv`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tActivity Data\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{this.state.resumeCSVurl && (\n\t\t\t\t\t\t<div className=\"horizontal\" id=\"big\">\n\t\t\t\t\t\t\t<a href={this.state.resumeCSVurl} download={`resume_data.csv`}>\n\t\t\t\t\t\t\t\tResume Data\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Admin;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport firebase from \"./firebase\";\nimport Resume from \"./Resume\";\nimport LandingPage from \"./LandingPage\";\nimport Admin from \"./Admin\";\nimport { IS_DEMO_VERSION } from \"./config\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nvar moment = require(\"moment-timezone\");\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.activityCounter = 1;\n\t\tthis.recordActivity = this.recordActivity.bind(this);\n\n\t\tthis.DATABASE = firebase.firestore();\n\n\t\t// This is hacky, but ReactRouter can't parse URL parameters unless inside a Route\n\t\tconst loc = document.location.hash;\n\t\tthis.applicantNumber = parseInt(loc.split(\"/\")[1]);\n\t\tthis.tierNumber = parseInt(loc.split(\"/\")[2]);\n\t\tthis.qualtricsUserId = loc.split(\"/\")[3];\n\n\t\t// Print for debugging purposes within Qualtrics\n\t\tconsole.log(\"qualtricsUserId: \" + this.qualtricsUserId);\n\t}\n\n\t/** Record the data (in Firebase, and print to console) */\n\tasync recordActivity(category, value, description) {\n\t\tif (this.qualtricsUserId === undefined) return;\n\n\t\t// This will be the ID of the activity in Firebase -- a string, padded to 5 digits so alphabetical sorting works\n\t\tconst id = this.activityCounter.toString().padStart(5, \"0\");\n\t\tthis.activityCounter = this.activityCounter + 1;\n\n\t\tconst now = moment();\n\n\t\tif (!IS_DEMO_VERSION) {\n\t\t\tthis.DATABASE.collection(\"responseIDs\")\n\t\t\t\t.doc(this.qualtricsUserId + \"_tier\" + this.tierNumber.toString())\n\t\t\t\t.collection(\"app\" + this.applicantNumber.toString())\n\t\t\t\t.doc(id)\n\t\t\t\t.set({\n\t\t\t\t\tcategory: category,\n\t\t\t\t\tdescription: description,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttimestamp: new Date(now),\n\t\t\t\t\ttimeEpoch: Number(now.format(\"x\")),\n\t\t\t\t\ttimeReadable: now.tz(\"America/Los_Angeles\").format(\"M-D-YY h:mm:ssa\"),\n\t\t\t\t});\n\t\t}\n\n\t\tconsole.log(id + \" \" + category + \": \" + value + \" -- \" + description);\n\t}\n\n\tcomponentDidMount() {\n\t\t// Update activityCounter to ensure previously recorded activity data are not overwritten\n\t\tthis.DATABASE.collection('responseIDs')\n\t\t\t.doc(this.qualtricsUserId + '_tier' + this.tierNumber.toString())\n\t\t\t.collection('app' + this.applicantNumber.toString()).get()\n\t\t\t.then((querySnapshot) => {\n\t\t\t\tthis.activityCounter = querySnapshot.size + 1\n\t\t\t\tthis.recordActivity(\"loading\", \"accessed\", \"App mounted\");\n\t\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconsole.log('componentWillUnmount from App.js');\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/:applicantNumber/:tierNumber/:qualtricsUserId\"\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<Resume\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tapplicantNumber={this.applicantNumber}\n\t\t\t\t\t\t\t\ttierNumber={this.tierNumber}\n\t\t\t\t\t\t\t\trecordActivity={this.recordActivity}\n\t\t\t\t\t\t\t\tqualtricsUserId={this.qualtricsUserId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route path=\"/admin\" render={() => <Admin />} />\n\n\t\t\t\t\t<Route path=\"/\" exact render={() => <LandingPage />} />\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}